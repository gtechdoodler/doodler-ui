{"version":3,"sources":["examples/ExampleFieldSet/ExampleFieldSet.tsx","components/common/modal/Overlay/Overlay.tsx","components/common/modal/ContextMenu/ContextMenu.tsx","components/common/inputs/select/Select/Select.tsx","components/common/inputs/select/SelectOption/SelectOption.tsx","examples/sortedUsers.ts","components/common/utils/Label/Label.tsx","components/common/hocs/WithLabel/WithLabel.tsx","examples/Default/Default.tsx","examples/CustomIcon/CustomIcon.tsx","examples/CustomOption/CustomOption.tsx","examples/CustomTheme/CustomTheme.tsx","components/common/inputs/TextField/TextField.tsx","examples/WithFilter/WithFilter.tsx","components/App/App.tsx","reportWebVitals.js","index.js"],"names":["ExampleFieldSet","legend","props","block","BemIt","className","out","children","Overlay","onClick","addClass","after","ContextMenu","onOverlayClick","el","Select","downArrowIcon","name","onHideOptions","onShowOptions","tabIndex","value","useState","showOptions","setShowOptions","selectedElement","setSelectedElement","selectedValue","setSelectedValue","childrenArray","React","Children","toArray","useEffect","i","length","child","isValidElement","selected","setSelectedElementStateAndInputField","element","getSelectItem","classList","contains","parentElement","mod","expanded","onKeyDown","ev","key","type","target","getAttribute","childElement","SelectItem","noSelect","console","log","users","sort","a","b","nameA","toLowerCase","nameB","Label","WithLabel","blockProp","inline","labelText","reverse","right","Default","sortedUsers","map","obj","id","toString","CustomOption","CustomTheme","TextField","forwardRef","ref","WithFilter","textFieldRef","useRef","filteredUsers","setFilteredUsers","current","focus","placeholder","onChange","filterText","currentTarget","filter","user","includes","App","CustomIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da7c183b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { ExampleFieldSetProps } from './ExampleFieldSet.types';\r\nimport BemIt from '@gtechdoodler/bem-it';\r\n\r\nimport './ExampleFieldSet.scss';\r\n\r\nconst ExampleFieldSet: React.FC<ExampleFieldSetProps> = ({ legend, ...props }) => {\r\n  const block = new BemIt('ExampleFieldSet');\r\n\r\n  return (\r\n    <fieldset className={block.out}>\r\n      <legend>{ legend }</legend>\r\n      { props.children }       \r\n    </fieldset>\r\n  )\r\n}\r\n\r\nexport default ExampleFieldSet;","import React from 'react';\r\n\r\nimport { OverlayProps } from './Overlay.types';\r\nimport BemIt, { addClass } from '@gtechdoodler/bem-it';\r\n\r\nimport './Overlay.scss';\r\n\r\nconst Overlay: React.FC<OverlayProps> = ({ className, onClick }) => {\r\n  const block = new BemIt('Overlay');\r\n\r\n  return (\r\n    <div className={addClass(className).after(block)} onClick={onClick}></div>\r\n  )\r\n}\r\n\r\nexport default Overlay;","import React from 'react';\r\n\r\nimport { ContextMenuProps } from './ContextMenu.types';\r\nimport BemIt, { addClass } from '@gtechdoodler/bem-it';\r\nimport Overlay from '../Overlay';\r\n\r\nimport './ContextMenu.scss';\r\n\r\nconst ContextMenu: React.FC<ContextMenuProps> = ({ className, onOverlayClick, ...props }) => {\r\n  const block = new BemIt('ContextMenu');\r\n\r\n  return (\r\n    <>\r\n      <div className={addClass(className).after(block)} {...props}>\r\n        {props.children}\r\n      </div>\r\n      <Overlay className={block.el('overlay').out}\r\n        onClick={onOverlayClick}\r\n      />    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContextMenu;","import React, { ReactElement, useEffect, useRef, useState } from 'react';\r\n\r\nimport { SelectProps } from './Select.types';\r\nimport BemIt, { addClass } from '@gtechdoodler/bem-it';\r\nimport ContextMenu from '../../../modal/ContextMenu';\r\nimport DownArrow from '@material-ui/icons/ArrowDropDown';\r\n\r\nimport './Select.scss';\r\n\r\nconst Select: React.FC<SelectProps> = (props) => {\r\n  const block = new BemIt('Select');\r\n  const {\r\n    className,\r\n    downArrowIcon,\r\n    name,\r\n    onHideOptions,\r\n    onShowOptions,\r\n    tabIndex,\r\n    value\r\n  } = props;\r\n\r\n  const [ showOptions, setShowOptions ] = useState(false);\r\n  const [ selectedElement, setSelectedElement ] = useState<ReactElement>(<></>);\r\n  const [ selectedValue, setSelectedValue ] = useState<string>(value || '');\r\n  const childrenArray = React.Children.toArray(props.children) as React.ReactChild[];\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < childrenArray.length; i++) {\r\n      const child = childrenArray[i];\r\n      if (React.isValidElement(child)) {\r\n        if (child.props.selected) {\r\n          setSelectedElementStateAndInputField(child);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (showOptions) {\r\n      if (onShowOptions) {\r\n        onShowOptions();\r\n      }\r\n    } else if (onHideOptions) {\r\n      onHideOptions();\r\n    }\r\n  }, [showOptions]);\r\n\r\n  const setSelectedElementStateAndInputField = (element: ReactElement) => {\r\n    setSelectedElement(element);\r\n    setSelectedValue(element.props.value);\r\n  }\r\n\r\n  const handleSelectClick = () => {\r\n    setShowOptions(!showOptions);\r\n  }\r\n\r\n  const getSelectItem = (element: HTMLElement | null | undefined): HTMLElement | null => {    \r\n    return element?.classList.contains('SelectItem')\r\n      ? element\r\n      : getSelectItem(element?.parentElement);\r\n  }\r\n\r\n  const handleMenuClick = (ev: React.MouseEvent) => {\r\n    const selectedElement = getSelectItem(ev.target as HTMLElement);\r\n    const selectedValue = selectedElement?.getAttribute('data-value');\r\n    if (selectedValue) {\r\n      for (let i = 0; i < childrenArray.length; i++) {\r\n        const childElement = childrenArray[i] as ReactElement;\r\n        if (childElement.props.value === selectedValue) {\r\n          setSelectedElementStateAndInputField(childElement);\r\n          setShowOptions(false);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleKeyDown = (ev: React.KeyboardEvent) => {\r\n    if (ev.key === 'Escape') {\r\n      setShowOptions(false);\r\n    } else if (ev.key !== 'Tab') {\r\n      setShowOptions(true);\r\n    }\r\n  }\r\n\r\n  const handleOverlayClick = () => {\r\n    setShowOptions(false);\r\n  }\r\n\r\n  return (\r\n    <div className={addClass(className).after(block.mod({ expanded: showOptions }))}>\r\n      <div\r\n        className={block.el('input').out}\r\n        onClick={handleSelectClick}\r\n        onKeyDown={handleKeyDown}\r\n        tabIndex={tabIndex}\r\n      >        \r\n        <input name={name} type=\"hidden\" value={selectedValue} />\r\n        <div className={block.el('selected').out}>\r\n          { selectedElement }\r\n        </div>\r\n        { (downArrowIcon != null) ? downArrowIcon : <DownArrow /> }\r\n      </div>\r\n      {\r\n        showOptions && (\r\n          <ContextMenu\r\n            className={block.el('menu').out}\r\n            onClick={handleMenuClick}\r\n            onOverlayClick={handleOverlayClick}\r\n          >\r\n            { props.children }\r\n          </ContextMenu>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react';\r\n\r\nimport { SelectItemProps } from './SelectOption.types';\r\nimport BemIt, { addClass } from '@gtechdoodler/bem-it';\r\n\r\nimport './SelectOption.scss';\r\n\r\nconst SelectItem: React.FC<SelectItemProps> = ({ className, value, ...props }) => {\r\n  const block = new BemIt('SelectItem');\r\n\r\n  return (\r\n    <div className={addClass(className).after(block.mod({ noSelect: value == null }))}\r\n      data-value={value}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectItem;\r\n","import users from './users.json';\r\n\r\nconsole.log('Sorting users');\r\n\r\nusers.sort((a, b) => {\r\n  const nameA = a.name.toLowerCase();\r\n  const nameB = b.name.toLowerCase();\r\n  \r\n  if (nameA < nameB) {\r\n    return -1;\r\n  }\r\n\r\n  if (nameA > nameB) {\r\n    return 1;\r\n  }\r\n\r\n  return 0;\r\n});\r\n\r\nexport default users;","import React from 'react';\r\n\r\nimport { LabelProps } from './Label.types';\r\nimport BemIt, { addClass } from '@gtechdoodler/bem-it';\r\n\r\nimport './Label.scss';\r\n\r\nconst Label: React.FC<LabelProps> = ({ className, ...props }) => {\r\n  const block = new BemIt('Label');\r\n\r\n  return (\r\n    <label className={addClass(className).after(block)}>\r\n      { props.children }\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Label;","import React from 'react';\r\n\r\nimport { WithLabelProps } from './WithLabel.types';\r\nimport BemIt, { addClass } from '@gtechdoodler/bem-it';\r\nimport Label from '../../utils/Label';\r\n\r\nimport './WithLabel.scss';\r\n\r\nconst WithLabel: React.FC<WithLabelProps> = (props) => {\r\n  const block = new BemIt('WithLabel');\r\n  const {\r\n    className,\r\n    block: blockProp,\r\n    inline,\r\n    labelText,\r\n    reverse,\r\n    right\r\n  } = props;\r\n\r\n  return (\r\n    <div className={block.mod({ block: blockProp, inline, right }).out}>\r\n      {\r\n        (reverse == true) && props.children\r\n      }\r\n      <Label\r\n        className={addClass(className).after(block.el('label'))}\r\n        {...props}\r\n      >\r\n        {labelText}\r\n      </Label>\r\n      {\r\n        (!reverse) && props.children\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WithLabel;","import React from 'react';\r\n\r\nimport ExampleFieldSet from '../ExampleFieldSet';\r\nimport Select from '../../components/common/inputs/select/Select';\r\nimport Option from '../../components/common/inputs/select/SelectOption';\r\nimport sortedUsers from '../sortedUsers';\r\n\r\nimport WithLabel from '../../components/common/hocs/WithLabel';\r\n\r\nconst Default: React.FC = () => {\r\n\r\n  return (\r\n    <ExampleFieldSet legend=\"Default\">\r\n      <WithLabel block labelText=\"Assign Item:\">\r\n        <Select name=\"AssignTo\" tabIndex={0}>\r\n          {\r\n            sortedUsers.map((obj) =>\r\n              <Option key={obj.id} value={obj.id?.toString()}>{obj.name}</Option>\r\n            )\r\n          }\r\n        </Select>\r\n      </WithLabel>\r\n    </ExampleFieldSet>\r\n  )\r\n}\r\n\r\n\r\nexport default Default;","import React from 'react';\r\n\r\nimport CustomSelectIcon from '@material-ui/icons/UnfoldMore';\r\nimport ExampleFieldSet from '../ExampleFieldSet';\r\nimport Select from '../../components/common/inputs/select/Select';\r\nimport Option from '../../components/common/inputs/select/SelectOption';\r\n\r\nimport sortedUsers from '../sortedUsers';\r\n\r\nconst Default: React.FC = () => {\r\n\r\n  return (\r\n    <ExampleFieldSet legend=\"Custom Icon\">\r\n      <Select downArrowIcon={<CustomSelectIcon />} tabIndex={0}>\r\n        {\r\n          sortedUsers.map((obj) =>\r\n            <Option key={obj.id} value={obj.id?.toString()}>{obj.name}</Option>\r\n          )\r\n        }\r\n      </Select>      \r\n    </ExampleFieldSet>\r\n  )\r\n}\r\n\r\n\r\nexport default Default;","import React from 'react';\r\n\r\nimport BemIt from '@gtechdoodler/bem-it';\r\nimport ExampleFieldSet from '../ExampleFieldSet';\r\nimport Select from '../../components/common/inputs/select/Select';\r\nimport Option from '../../components/common/inputs/select/SelectOption';\r\n\r\nimport sortedUsers from '../sortedUsers';\r\nimport './CustomOption.scss';\r\n\r\nconst CustomOption: React.FC = () => {\r\n  const block = new BemIt('CustomOption');\r\n\r\n  return (\r\n    <ExampleFieldSet legend=\"Custom Option\">\r\n      <Select tabIndex={0}>\r\n        {\r\n          sortedUsers.map((obj) =>\r\n            <Option key={obj.id} value={obj.id?.toString()}>\r\n              <span className={block.el('avatar').out}></span>\r\n              <span className={block.el('user').out}>{obj.name}</span>\r\n            </Option>\r\n          )\r\n        }\r\n      </Select>      \r\n    </ExampleFieldSet>\r\n  )\r\n}\r\n\r\n\r\nexport default CustomOption;","import React from 'react';\r\n\r\nimport BemIt from '@gtechdoodler/bem-it';\r\nimport ExampleFieldSet from '../ExampleFieldSet';\r\nimport Select from '../../components/common/inputs/select/Select';\r\nimport Option from '../../components/common/inputs/select/SelectOption';\r\n\r\nimport sortedUsers from '../sortedUsers';\r\nimport './CustomTheme.scss';\r\n\r\nconst CustomTheme: React.FC = () => {\r\n  const block = new BemIt('CustomTheme');\r\n\r\n  return (\r\n    <ExampleFieldSet legend=\"Custom Theme\">\r\n      <Select className={block.el('select').out} tabIndex={0}>\r\n        {\r\n          sortedUsers.map((obj) =>\r\n            <Option key={obj.id} value={obj.id?.toString()}>{obj.name}</Option>\r\n          )\r\n        }\r\n      </Select>      \r\n    </ExampleFieldSet>\r\n  )\r\n}\r\n\r\n\r\nexport default CustomTheme;","import React, { forwardRef } from 'react';\r\n\r\nimport { TextFieldProps } from './TextField.types';\r\nimport BemIt, { addClass } from '@gtechdoodler/bem-it';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = forwardRef<HTMLInputElement, TextFieldProps>(({ className, ...props }, ref) => {\r\n  const block = new BemIt('TextField');\r\n\r\n  return (\r\n    <input\r\n      className={addClass(className).after(block)}\r\n      type=\"text\"\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  )\r\n});\r\n\r\nexport default TextField;","import React, { useRef, useState } from 'react';\r\n\r\nimport BemIt from '@gtechdoodler/bem-it';\r\nimport ExampleFieldSet from '../ExampleFieldSet';\r\nimport Select from '../../components/common/inputs/select/Select';\r\nimport Option from '../../components/common/inputs/select/SelectOption';\r\nimport TextField from '../../components/common/inputs/TextField';\r\n\r\nimport sortedUsers from '../sortedUsers';\r\nimport './WithFilter.scss';\r\n\r\nconst WithFilter: React.FC = () => {\r\n  const block = new BemIt('WithFilter');\r\n  const textFieldRef = useRef<HTMLInputElement>(null);\r\n  const [filteredUsers, setFilteredUsers] = useState(sortedUsers);\r\n\r\n  const handlerFilterChange = (ev: React.FormEvent<HTMLInputElement>) => {\r\n    const filterText = ev.currentTarget.value;\r\n    setFilteredUsers(sortedUsers.filter((user) =>\r\n      user.name.toLowerCase().includes(filterText.toLowerCase()))\r\n    );\r\n  }\r\n\r\n  const handleHideOptions = () => {\r\n    setFilteredUsers(sortedUsers);\r\n  }\r\n\r\n  const handleShowOptions = () => {\r\n    textFieldRef.current?.focus();\r\n  }\r\n\r\n  return (\r\n    <ExampleFieldSet legend=\"With Filter\">\r\n      <Select\r\n        className={block.el('select').out}\r\n        onHideOptions={handleHideOptions}\r\n        onShowOptions={handleShowOptions}\r\n        tabIndex={0}\r\n      >\r\n        <Option>\r\n          <TextField\r\n            placeholder=\"Search for a user\"\r\n            onChange={handlerFilterChange}\r\n            ref={textFieldRef}\r\n          />\r\n        </Option>\r\n        {\r\n          filteredUsers.map((obj) =>\r\n            <Option key={obj.id} value={obj.id?.toString()}>\r\n              <span>{obj.name}</span>\r\n            </Option>\r\n          )\r\n        }\r\n      </Select>      \r\n    </ExampleFieldSet>\r\n  )\r\n}\r\n\r\n\r\nexport default WithFilter;","import React from 'react';\n\nimport BemIt from '@gtechdoodler/bem-it';\nimport DefaultExample from '../../examples/Default';\nimport CustomIconExample from '../../examples/CustomIcon';\nimport CustomOptionExample from '../../examples/CustomOption';\nimport CustomThemeExample from '../../examples/CustomTheme';\nimport WithFilter from '../../examples/WithFilter';\n\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const block = new BemIt('App');\n  \n  return (\n    <div className={block.out}>\n      <DefaultExample />\n      <CustomIconExample />\n      <CustomOptionExample />\n      <WithFilter />\n      <CustomThemeExample />\n\n      <div className={block.el('snagContainer').out}>\n        <h2>Outstanding</h2>\n        <ul>\n          <li>Add subtle box-shadow to Select component.</li>\n          <li>Apply accessibility aria-attributes and roles.</li>\n          <li>Invalidate the children of Select, which should always be SelectOption nodes.</li>\n          <li>Unit tests.</li>\n          <li>Document and comment code.</li>\n          <li>Create export.d.ts and set up a publish dir.</li>\n          <li>Publish npm test package and document readme.</li>\n        </ul>\n      </div>\n\n      <div className={block.el('snagContainer').out}>\n        <h2>Improvements</h2>\n        <ul>\n          <li>Improve how the Select options' menu scales in the available space, specifically when opened at the bottom of the window.</li>\n          <li>Test excessive amount of data with a filtering text field debounce. Although, perhaps the wrong component for excessive data set.</li>\n          <li>Consider including a fuzzy searching.</li>\n          <li>Flexibility and scalability is key in a design sys, but there's a bit of boilerplate setting up the filter variation. Investigate refactoring.</li>\n          <li>Add alias paths to project, avoiding unsightly relative import paths.</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport '@fontsource/roboto';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}